{"is_source_file": true, "format": "TypeScript", "description": "This TypeScript file defines types related to notes and users, as well as various functions for interacting with a backend API for note management, including authentication, CRUD operations for notes, and video generation related to notes.", "external_files": ["/auth/login", "/auth/me", "/notes", "/notes/{id}", "/notes/{id}/video", "/notes/{id}/video/{jobId}"], "external_methods": ["fetch"], "published": ["Note", "User", "ApiResult", "login", "logout", "getMe", "listNotes", "getNote", "createNote", "updateNote", "deleteNote", "generateNoteVideo", "getNoteVideoStatus"], "classes": [], "methods": [{"name": "getApiBase", "description": "Returns the base URL of the backend API, configurable via environment variables or global variables."}, {"name": "getAuthHeader", "description": "Constructs authorization headers with token from localStorage if available."}, {"name": "async function request<T>( request", "description": "Performs a fetch request to the backend API with proper error handling and JSON parsing.", "scope": "", "scopeKind": ""}, {"name": "async function safeText(resp: any): Promise<string> { safeText", "description": "Safely extracts text content from fetch response, attempting to parse JSON error messages.", "scope": "", "scopeKind": ""}, {"name": "export async function login(email: string, password: string) { login", "description": "Logs in a user with email and password, storing the auth token on success.", "scope": "", "scopeKind": ""}, {"name": "export function logout() { logout", "description": "Removes the stored auth token, effectively logging out the user.", "scope": "", "scopeKind": ""}, {"name": "export async function getMe() { getMe", "description": "Retrieves current user information based on stored token.", "scope": "", "scopeKind": ""}, {"name": "export async function listNotes() { listNotes", "description": "Fetches a list of notes associated with the current user.", "scope": "", "scopeKind": ""}, {"name": "export async function getNote(id: string) { getNote", "description": "Retrieves a specific note by ID.", "scope": "", "scopeKind": ""}, {"name": "export async function createNote(payload: { title: string; content: string }) { createNote", "description": "Creates a new note with provided title and content.", "scope": "", "scopeKind": ""}, {"name": "export async function updateNote( updateNote", "description": "Updates an existing note identified by ID with new title or content.", "scope": "", "scopeKind": ""}, {"name": "export async function deleteNote(id: string) { deleteNote", "description": "Deletes a note by ID.", "scope": "", "scopeKind": ""}, {"name": "export async function generateNoteVideo(id: string) { generateNoteVideo", "description": "Requests backend to generate a video for a specific note.", "scope": "", "scopeKind": ""}, {"name": "export async function getNoteVideoStatus(id: string, jobId: string) { getNoteVideoStatus", "description": "Polls the status of a video generation job for a note.", "scope": "", "scopeKind": ""}], "calls": ["request", "safeText", "localStorage.getItem", "localStorage.setItem", "localStorage.removeItem"], "search-terms": ["api", "notes", "Note", "User", "video", "auth"], "state": 2, "file_id": 17, "knowledge_revision": 70, "git_revision": "", "revision_history": [{"35": ""}, {"69": ""}, {"70": ""}], "ctags": [{"_type": "tag", "name": "ApiResult", "path": "/home/kavia/workspace/code-generation/notevision-10265-10276/notes_frontend/src/utils/api.ts", "pattern": "/^type ApiResult<T> = { data?: T; error?: string };$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "Note", "path": "/home/kavia/workspace/code-generation/notevision-10265-10276/notes_frontend/src/utils/api.ts", "pattern": "/^export type Note = {$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "User", "path": "/home/kavia/workspace/code-generation/notevision-10265-10276/notes_frontend/src/utils/api.ts", "pattern": "/^export type User = {$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "createNote", "path": "/home/kavia/workspace/code-generation/notevision-10265-10276/notes_frontend/src/utils/api.ts", "pattern": "/^export async function createNote(payload: { title: string; content: string }) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "deleteNote", "path": "/home/kavia/workspace/code-generation/notevision-10265-10276/notes_frontend/src/utils/api.ts", "pattern": "/^export async function deleteNote(id: string) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "doFetch", "path": "/home/kavia/workspace/code-generation/notevision-10265-10276/notes_frontend/src/utils/api.ts", "pattern": "/^    const doFetch: typeof fetch =$/", "language": "TypeScript", "kind": "constant", "scope": "request", "scopeKind": "function"}, {"_type": "tag", "name": "generateNoteVideo", "path": "/home/kavia/workspace/code-generation/notevision-10265-10276/notes_frontend/src/utils/api.ts", "pattern": "/^export async function generateNoteVideo(id: string) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getApiBase", "path": "/home/kavia/workspace/code-generation/notevision-10265-10276/notes_frontend/src/utils/api.ts", "pattern": "/^const getApiBase = (): string => {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "getAuthHeader", "path": "/home/kavia/workspace/code-generation/notevision-10265-10276/notes_frontend/src/utils/api.ts", "pattern": "/^const getAuthHeader = () => {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "getMe", "path": "/home/kavia/workspace/code-generation/notevision-10265-10276/notes_frontend/src/utils/api.ts", "pattern": "/^export async function getMe() {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getNote", "path": "/home/kavia/workspace/code-generation/notevision-10265-10276/notes_frontend/src/utils/api.ts", "pattern": "/^export async function getNote(id: string) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getNoteVideoStatus", "path": "/home/kavia/workspace/code-generation/notevision-10265-10276/notes_frontend/src/utils/api.ts", "pattern": "/^export async function getNoteVideoStatus(id: string, jobId: string) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "j", "path": "/home/kavia/workspace/code-generation/notevision-10265-10276/notes_frontend/src/utils/api.ts", "pattern": "/^      const j = JSON.parse(t);$/", "language": "TypeScript", "kind": "constant", "scope": "safeText", "scopeKind": "function"}, {"_type": "tag", "name": "json", "path": "/home/kavia/workspace/code-generation/notevision-10265-10276/notes_frontend/src/utils/api.ts", "pattern": "/^    const json = JSON.parse(text);$/", "language": "TypeScript", "kind": "constant", "scope": "request", "scopeKind": "function"}, {"_type": "tag", "name": "listNotes", "path": "/home/kavia/workspace/code-generation/notevision-10265-10276/notes_frontend/src/utils/api.ts", "pattern": "/^export async function listNotes() {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/notevision-10265-10276/notes_frontend/src/utils/api.ts", "pattern": "/^export async function login(email: string, password: string) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "logout", "path": "/home/kavia/workspace/code-generation/notevision-10265-10276/notes_frontend/src/utils/api.ts", "pattern": "/^export function logout() {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "msg", "path": "/home/kavia/workspace/code-generation/notevision-10265-10276/notes_frontend/src/utils/api.ts", "pattern": "/^      const msg = await safeText(resp);$/", "language": "TypeScript", "kind": "constant", "scope": "request", "scopeKind": "function"}, {"_type": "tag", "name": "request", "path": "/home/kavia/workspace/code-generation/notevision-10265-10276/notes_frontend/src/utils/api.ts", "pattern": "/^async function request<T>($/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/notevision-10265-10276/notes_frontend/src/utils/api.ts", "pattern": "/^  const res = await request<{ token: string; user: User }>(\"\\/auth\\/login\", {$/", "language": "TypeScript", "kind": "constant", "scope": "login", "scopeKind": "function"}, {"_type": "tag", "name": "resp", "path": "/home/kavia/workspace/code-generation/notevision-10265-10276/notes_frontend/src/utils/api.ts", "pattern": "/^    const resp = await doFetch(`${getApiBase()}${path}`, {$/", "language": "TypeScript", "kind": "constant", "scope": "request", "scopeKind": "function"}, {"_type": "tag", "name": "safeText", "path": "/home/kavia/workspace/code-generation/notevision-10265-10276/notes_frontend/src/utils/api.ts", "pattern": "/^async function safeText(resp: any): Promise<string> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "t", "path": "/home/kavia/workspace/code-generation/notevision-10265-10276/notes_frontend/src/utils/api.ts", "pattern": "/^    const t = await resp.text();$/", "language": "TypeScript", "kind": "constant", "scope": "safeText", "scopeKind": "function"}, {"_type": "tag", "name": "text", "path": "/home/kavia/workspace/code-generation/notevision-10265-10276/notes_frontend/src/utils/api.ts", "pattern": "/^    const text = await resp.text();$/", "language": "TypeScript", "kind": "constant", "scope": "request", "scopeKind": "function"}, {"_type": "tag", "name": "updateNote", "path": "/home/kavia/workspace/code-generation/notevision-10265-10276/notes_frontend/src/utils/api.ts", "pattern": "/^export async function updateNote($/", "language": "TypeScript", "kind": "function"}], "hash": "2d9817479bc5082e1d204444102d2993", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/utils/api.ts"}